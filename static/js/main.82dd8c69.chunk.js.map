{"version":3,"sources":["components/container/table/adress/adress.module.css","api/localData/localData32.tsx","api/dataApi.tsx","functions.tsx","dataReducer.tsx","components/error/error.tsx","components/Loading/loading.tsx","components/container/table/adress/adress.tsx","components/container/table/buttons/button.tsx","components/container/table/forms/addUserForm/AddUserForm.jsx","components/container/table/forms/search/Search-form.tsx","components/container/table/table.tsx","selectors.tsx","components/container/Container.tsx","App.tsx","reduxStore.tsx","index.tsx","components/container/table/forms/search/search_form.module.css","components/container/table/table.module.css","components/container/table/forms/addUserForm/add_form.module.css","components/error/error.module.css","components/container/table/buttons/buttons.module.css","components/error/icon/nothing-found (1).png","components/Loading/loading.module.css"],"names":["module","exports","localData32","address","streetAddress","city","state","zip","description","email","firstName","id","lastName","phone","link","a","fetch","response","json","responseData","getData","getSortData","sortColumn","data","direction","sort","b","getPogination","users","items","length","totalCount","Math","ceil","pages","i","push","getUsersPortion","pageNumber","lefBorder","rightBorder","filter","item","index","serchItem","values","allUsersCopy","str","sortString","toLowerCase","column","includes","initialState","allUsers","userInfo","ui","paginationList","searchString","isAddUser","progress","icon_error","actions","type","directions","array","number","payload","getSortDataTc","dispatch","sortData","dataReducer","action","Error","className","s","error_icon_block","alt","src","iconError","error_icon","error_text","Loader","loader","Adress","props","person","showPerson","desc","textarea","data_textarea","onChange","value","button","onClick","big","Buttons","setLink","buttons","little","phoneNumberMask","AddUserForm","showForm","addPerson","validationSchema","yup","shape","typeError","required","min","initialValues","onSubmit","validateOnBlur","errors","touched","handleChange","handleBlur","isValid","dirty","form_container","search_container","input_container","htmlFor","placeholder","form_input","name","onBlur","error","field","mask","form_input_error","guide","disabled","button_add","e","button_close","SearchForm","setSerchUsers","search_input","select_list","as","button_submit","button_reset","Table","chengePage","handleClick","container","table_container","table_title","aria-hidden","role","tabIndex","map","user","key","table","pagination__block","selectedPage","selected__no_active","getPageNumber","getUsers","getAllUsers","getDirection","getColumn","getPaginationList","getallUsersCopy","getIsAddUser","getPersonAdress","getLink","getProgress","getIconStatus","AllDataContainer","useDispatch","useSelector","useEffect","then","getDataTc","prevColumn","propsColumn","propsPageNumber","setSerchUsersTc","flag","currentTarget","parentElement","style","width","target","propsPerson","addPersonTc","propsLink","App","Container","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82dd8c69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_textarea\":\"adress_data_textarea__3VgEo\",\"textarea_container\":\"adress_textarea_container__5sNpK\",\"desc\":\"adress_desc__2jw6A\",\"textarea\":\"adress_textarea__2FTBm\",\"button\":\"adress_button__3Fqd5\",\"big\":\"adress_big__L4C-D\"};","const localData32 = [\n  {\n    address: {\n      streetAddress: '1503 Dolor Rd', city: 'Central', state: 'NC', zip: '27756',\n    },\n    description: 'molestie at lorem adipiscing massa aliquam sapien pharetra non vitae dolor lectus massa dui aliquam vel dolor aenean lorem dui egestas adipiscing nec eget fringilla suspendisse eros malesuada scelerisque at nullam elementum',\n    email: 'TMcmillan@magna.gov',\n    firstName: 'Camelyn',\n    id: 576,\n    lastName: 'Eschenbacher',\n    phone: '(670)379-8407',\n  },\n  {\n    address: {\n      streetAddress: '6848 Lectus Dr', city: 'Snow Hill', state: 'IL', zip: '45476',\n    },\n    description: 'elit morbi consectetur ante ipsum tortor in elementum id tincidunt dolor egestas vestibulum magna ipsum quis donec mattis etiam pharetra pulvinar rutrum lectus tortor tempor pretium aliquam odio sit sollicitudin tincidunt libero',\n    email: 'EAllison@ante.ly',\n    firstName: 'Marcedia',\n    id: 624,\n    lastName: 'Band',\n    phone: '(851)392-4953',\n  },\n  {\n    address: {\n      streetAddress: '4937 Morbi Ct', city: 'York', state: 'DC', zip: '80545',\n    },\n    description: 'placerat sit curabitur pretium dui mattis sed tortor tortor lacus dui vitae magna porta turpis facilisis sed pulvinar sed sed malesuada curabitur dolor sollicitudin convallis orci lectus odio magna ipsum porttitor non',\n    email: 'TAlpert@ipsum.com',\n    firstName: 'Shaneka',\n    id: 669,\n    lastName: 'Nordby',\n    phone: '(313)236-0944',\n  },\n  {\n    address: {\n      streetAddress: '9380 Lacus Dr', city: 'Cumming', state: 'DE', zip: '40968',\n    },\n    description: 'convallis scelerisque sapien non hendrerit risus orci lorem porta dolor in tempor egestas id eros placerat ipsum aliquam consequat eget nec elit dolor adipiscing at lorem magna et tempor curabitur massa lacus',\n    email: 'MKramarsky@magna.com',\n    firstName: 'Shawn',\n    id: 552,\n    lastName: 'Brinker',\n    phone: '(632)444-3450',\n  },\n  {\n    address: {\n      streetAddress: '1552 Elementum Rd', city: 'Longmont', state: 'UT', zip: '51874',\n    },\n    description: 'placerat ipsum augue vel nec lorem malesuada morbi tortor vitae aliquam vestibulum sit pretium eros risus lacus dui mattis curabitur aliquam dui hendrerit lacus malesuada consectetur placerat tortor curabitur porttitor vitae eros',\n    email: 'KBelcher@vestibulum.io',\n    firstName: 'Dominic',\n    id: 477,\n    lastName: 'Penty',\n    phone: '(947)340-1982',\n  },\n  {\n    address: {\n      streetAddress: '7986 Orci Ct', city: 'Torrington', state: 'SC', zip: '83004',\n    },\n    description: 'aliquam ipsum lacus at sed id lacus ac placerat vitae consequat tincidunt sed tincidunt porttitor porta porta ipsum porta tincidunt vitae sit tincidunt convallis eros in sed mattis sit ante pharetra tempor',\n    email: 'KKoprowski@porttitor.com',\n    firstName: 'Tony',\n    id: 359,\n    lastName: 'Crider',\n    phone: '(471)145-4484',\n  },\n  {\n    address: {\n      streetAddress: '855 Odio Ct', city: 'Central Lake', state: 'VA', zip: '59817',\n    },\n    description: 'dolor sapien morbi egestas odio sed at magna vestibulum aliquam pulvinar massa dolor mattis risus risus orci lectus scelerisque velit dolor lacus tincidunt facilisis aenean eros aliquam amet sed consectetur dolor augue',\n    email: 'RSilverio@dolor.ly',\n    firstName: 'Aristotle',\n    id: 722,\n    lastName: 'Clanton',\n    phone: '(422)566-7421',\n  },\n  {\n    address: {\n      streetAddress: '9650 Consequat Ave', city: 'Thornton', state: 'TN', zip: '57464',\n    },\n    description: 'tempor at sed hendrerit risus eget neque nec vestibulum placerat tincidunt tellus neque dui eget neque pharetra massa nunc suspendisse et molestie dui mattis convallis sapien tempor molestie sagittis ac et mattis',\n    email: 'NKrout@tincidunt.com',\n    firstName: 'Wanda',\n    id: 951,\n    lastName: 'Petrie',\n    phone: '(697)968-3553',\n  },\n  {\n    address: {\n      streetAddress: '8432 Dui Ave', city: 'Hagerstown', state: 'NH', zip: '43659',\n    },\n    description: 'massa porttitor mattis amet porta elit facilisis id odio dui non tortor convallis amet neque pharetra aenean ac rutrum magna non elementum lacus dolor molestie turpis neque eget massa facilisis vel porttitor',\n    email: 'CShroff@ante.org',\n    firstName: 'Dante',\n    id: 950,\n    lastName: 'Darnley',\n    phone: '(769)291-9597',\n  },\n  {\n    address: {\n      streetAddress: '5845 Lacus Ave', city: 'Chesterfield', state: 'MD', zip: '93104',\n    },\n    description: 'adipiscing tempor quis pulvinar lacus amet nec velit fringilla consequat turpis malesuada magna massa velit porta aenean porttitor vitae at mattis massa dolor mi orci at at lacus consectetur vitae libero pharetra',\n    email: 'DWantland@sapien.org',\n    firstName: 'Gertrude',\n    id: 332,\n    lastName: 'Ponthieux',\n    phone: '(922)357-6393',\n  },\n  {\n    address: {\n      streetAddress: '2071 Aenean Ct', city: 'Saltilo', state: 'WA', zip: '27955',\n    },\n    description: 'dolor convallis odio sollicitudin scelerisque in elementum sit eros vitae scelerisque tortor scelerisque non augue aliquam vestibulum placerat orci molestie tortor tempor elit in tempor amet pretium sollicitudin aenean pulvinar odio porttitor',\n    email: 'AHerrick@velit.com',\n    firstName: 'Natilee',\n    id: 941,\n    lastName: 'Troy',\n    phone: '(450)331-7033',\n  },\n  {\n    address: {\n      streetAddress: '7848 Sit Ln', city: 'Joliet', state: 'ND', zip: '18466',\n    },\n    description: 'sagittis etiam dolor sed sollicitudin consequat consequat id tortor molestie massa pulvinar lorem aliquam tortor consequat vitae eros ipsum curabitur adipiscing nunc mi sagittis dolor lacus nunc ante amet sed fringilla dolor',\n    email: 'SBean@morbi.com',\n    firstName: 'Arif',\n    id: 44,\n    lastName: 'Koch',\n    phone: '(683)581-5032',\n  },\n  {\n    address: {\n      streetAddress: '949 Lectus Ct', city: 'Maricopa', state: 'OH', zip: '78881',\n    },\n    description: 'convallis mattis tincidunt vitae tincidunt nunc dolor tempor hendrerit fringilla tincidunt neque suspendisse elit massa tempor id augue dolor sed augue hendrerit dolor lacus scelerisque sed dolor elit sagittis sollicitudin sollicitudin fringilla',\n    email: 'SSchuster@eros.ly',\n    firstName: 'Dean',\n    id: 562,\n    lastName: 'Bessey',\n    phone: '(253)406-1684',\n  },\n  {\n    address: {\n      streetAddress: '6140 Vestibulum Ln', city: 'San Antonio', state: 'ID', zip: '93265',\n    },\n    description: 'et facilisis tincidunt facilisis convallis massa dolor sagittis tincidunt sollicitudin scelerisque ipsum vitae id consequat risus tellus aliquam fringilla donec et dolor mattis dolor magna in sagittis quis placerat malesuada sollicitudin dui',\n    email: 'SFinn@tempor.net',\n    firstName: 'Nora',\n    id: 60,\n    lastName: 'Nash',\n    phone: '(130)788-7132',\n  },\n  {\n    address: {\n      streetAddress: '114 Id Ave', city: 'Hillsboro', state: 'AZ', zip: '48991',\n    },\n    description: 'vestibulum magna libero magna suspendisse neque ipsum scelerisque sit elementum pulvinar in lacus magna placerat placerat sagittis placerat vestibulum sit lacus sed sed sollicitudin ante ante ante magna nunc aliquam nunc in',\n    email: 'JAkins@tortor.net',\n    firstName: 'Krystal',\n    id: 705,\n    lastName: 'Pachler',\n    phone: '(284)095-6478',\n  },\n  {\n    address: {\n      streetAddress: '1610 Hendrerit Dr', city: 'Mansfield', state: 'CO', zip: '87628',\n    },\n    description: 'at sed elit id sit mi sed tortor tincidunt etiam sed donec id hendrerit hendrerit odio eros fringilla tincidunt porta ac massa elit vestibulum in massa mattis sed molestie aenean ante ipsum',\n    email: 'BAviles@neque.com',\n    firstName: 'Alexandra',\n    id: 774,\n    lastName: 'Poer',\n    phone: '(857)048-3822',\n  },\n  {\n    address: {\n      streetAddress: '9389 Malesuada Ave', city: 'Kingsland', state: 'VT', zip: '87246',\n    },\n    description: 'sed mi augue tortor non magna magna aliquam sit lectus dolor vitae tempor placerat suspendisse mattis massa magna vel massa eros sed vel adipiscing lectus sapien massa sit placerat elit egestas velit',\n    email: 'HDawn@elit.ly',\n    firstName: 'Melina',\n    id: 867,\n    lastName: 'Silverstein',\n    phone: '(762)290-4133',\n  },\n  {\n    address: {\n      streetAddress: '4854 Quis Ave', city: 'Ft Myers', state: 'AK', zip: '79620',\n    },\n    description: 'orci massa etiam pharetra lacus scelerisque molestie orci et sed pretium sollicitudin massa nullam vitae eros tortor rutrum elementum nec quis non facilisis vel vel placerat et eget sed hendrerit amet lacus',\n    email: 'GJohnson@magna.gov',\n    firstName: 'Penny',\n    id: 92,\n    lastName: 'Harmati',\n    phone: '(958)727-4147',\n  },\n  {\n    address: {\n      streetAddress: '6739 Elementum Dr', city: 'Boynton Beach', state: 'LA', zip: '79247',\n    },\n    description: 'pretium pretium vestibulum tincidunt sapien pulvinar magna vestibulum molestie odio porttitor porta tincidunt massa vitae non in placerat hendrerit ipsum placerat ac adipiscing donec curabitur quis tortor mi ante amet consequat consequat',\n    email: 'ASpeer@ipsum.com',\n    firstName: 'Suzanne',\n    id: 906,\n    lastName: 'Stallone',\n    phone: '(882)900-9830',\n  },\n  {\n    address: {\n      streetAddress: '8354 Hendrerit Ln', city: 'Greensboro', state: 'TX', zip: '48204',\n    },\n    description: 'libero lorem sed ipsum quis et magna nunc dolor dolor tincidunt in et nunc amet sed tincidunt lacus ante dolor et sollicitudin orci non lectus aenean aenean et elementum suspendisse dui dolor',\n    email: 'DEugene@tortor.gov',\n    firstName: 'Jack',\n    id: 244,\n    lastName: 'Gray',\n    phone: '(442)542-1771',\n  },\n  {\n    address: {\n      streetAddress: '3679 Sagittis Rd', city: 'Saugus', state: 'TX', zip: '87791',\n    },\n    description: 'in tortor dolor hendrerit sed consectetur magna sollicitudin dolor amet convallis nunc sit sit placerat sed magna odio libero at eros velit molestie tempor sed mattis tempor nec in vestibulum dolor elit',\n    email: 'GStewart@sit.com',\n    firstName: 'Humayun',\n    id: 291,\n    lastName: 'Van',\n    phone: '(139)616-4316',\n  },\n  {\n    address: {\n      streetAddress: '6508 Vestibulum Ave', city: 'Hudsonville', state: 'AZ', zip: '29177',\n    },\n    description: 'lacus adipiscing sollicitudin magna sit ante sed tortor tincidunt at et sapien ac vel consectetur lacus ipsum lacus aenean nec pretium ipsum sit nec nec tortor tortor non odio dolor suspendisse nunc',\n    email: 'YJouglard@mattis.io',\n    firstName: 'Alek',\n    id: 689,\n    lastName: 'Whisler',\n    phone: '(241)413-5735',\n  },\n  {\n    address: {\n      streetAddress: '7083 Consectetur Ave', city: 'Faribault', state: 'SD', zip: '20869',\n    },\n    description: 'sollicitudin curabitur id vestibulum sed ac ante massa scelerisque sed mattis orci aenean sollicitudin eget dolor aliquam vestibulum tortor magna libero vel tincidunt tincidunt eget massa vel etiam et sagittis sapien ipsum',\n    email: 'TDewolfe@tortor.io',\n    firstName: 'Nadirah',\n    id: 273,\n    lastName: 'Porter',\n    phone: '(916)121-1367',\n  },\n  {\n    address: {\n      streetAddress: '4737 Sagittis Ln', city: 'Johnsburg', state: 'KS', zip: '50590',\n    },\n    description: 'placerat aliquam velit tortor eros rutrum tincidunt consequat amet dolor adipiscing sed sed amet magna et magna hendrerit aenean lorem consequat placerat augue massa dolor sit scelerisque fringilla molestie mi tortor molestie',\n    email: 'MBednarsh@nunc.io',\n    firstName: 'Jitender',\n    id: 956,\n    lastName: 'Wittcop',\n    phone: '(686)513-9094',\n  },\n  {\n    address: {\n      streetAddress: '3559 Elementum Rd', city: 'Ashburn', state: 'RI', zip: '23257',\n    },\n    description: 'lacus suspendisse morbi lectus aenean nec tincidunt sit et fringilla pulvinar nec sapien at pretium dolor donec pulvinar porttitor pulvinar tempor dui sollicitudin aliquam pulvinar adipiscing placerat neque malesuada lacus lacus orci',\n    email: 'AShafer@tellus.gov',\n    firstName: 'Vivian',\n    id: 703,\n    lastName: 'Thomason',\n    phone: '(190)748-2402',\n  },\n  {\n    address: {\n      streetAddress: '5918 Massa Ct', city: 'Hillsboro', state: 'NJ', zip: '53369',\n    },\n    description: 'ipsum at fringilla massa ac massa sagittis facilisis nullam donec sollicitudin dolor vitae ipsum odio aenean pulvinar quis eget odio vestibulum magna porta magna quis risus consectetur dui pulvinar amet non magna',\n    email: 'CBias@nullam.org',\n    firstName: 'Val',\n    id: 493,\n    lastName: 'Caines',\n    phone: '(353)162-8082',\n  },\n  {\n    address: {\n      streetAddress: '949 Amet Ln', city: 'Chesterfield', state: 'NE', zip: '67335',\n    },\n    description: 'aliquam placerat lacus turpis ante tincidunt et porta elit nunc sed dolor quis nullam suspendisse lacus scelerisque magna mi non vestibulum ac dolor lectus dolor egestas pretium id et egestas sit ac',\n    email: 'NHarkey@ac.gov',\n    firstName: 'Yong',\n    id: 53,\n    lastName: 'Syner',\n    phone: '(942)984-5894',\n  },\n  {\n    address: {\n      streetAddress: '5406 Ac Dr', city: 'E. Lansing', state: 'MI', zip: '94150',\n    },\n    description: 'tincidunt vitae nullam elit magna at morbi nec dolor aliquam sagittis vestibulum turpis magna nec aliquam ipsum et velit et rutrum at quis tempor fringilla sed magna vestibulum lacus eget consectetur odio',\n    email: 'CCorkett@quis.com',\n    firstName: 'Herbert',\n    id: 45,\n    lastName: 'Underwood',\n    phone: '(490)279-0242',\n  },\n  {\n    address: {\n      streetAddress: '8132 Lacus Dr', city: 'Cedartown', state: 'OH', zip: '90238',\n    },\n    description: 'elementum consectetur sit magna placerat aliquam sagittis sollicitudin tempor tincidunt amet sed placerat dui ipsum tincidunt consectetur ac aliquam sit sed neque tortor pharetra odio amet eget curabitur nec placerat aliquam libero',\n    email: 'GPollard@fringilla.net',\n    firstName: \"D'Juan\",\n    id: 767,\n    lastName: 'Symes',\n    phone: '(274)712-3487',\n  },\n  {\n    address: {\n      streetAddress: '9395 Risus Dr', city: 'Kyle', state: 'OR', zip: '67802',\n    },\n    description: 'aliquam morbi nunc magna lacus amet aliquam porta sapien odio lacus scelerisque aliquam etiam amet dolor tellus nec pretium aliquam aliquam vitae sagittis sapien ac facilisis nullam pretium ac sollicitudin sed hendrerit',\n    email: 'CHerbert@in.com',\n    firstName: 'Jephter',\n    id: 775,\n    lastName: 'Love',\n    phone: '(507)081-8693',\n  },\n  {\n    address: {\n      streetAddress: '5347 Placerat Ct', city: 'Richmond', state: 'NH', zip: '70037',\n    },\n    description: 'sollicitudin dolor rutrum sed tempor amet in lorem porttitor elit at augue consectetur libero quis curabitur lacus vitae suspendisse rutrum vel pretium curabitur placerat dui vitae tempor molestie sit hendrerit orci sapien',\n    email: 'JHolmes@donec.ly',\n    firstName: 'Chris',\n    id: 346,\n    lastName: 'Onatop',\n    phone: '(906)959-4613',\n  },\n  {\n    address: {\n      streetAddress: '4710 At Dr', city: 'Honolulu', state: 'TN', zip: '99331',\n    },\n    description: 'etiam neque malesuada fringilla egestas etiam orci tempor nec sit aliquam sit sagittis risus vestibulum porttitor id curabitur lorem rutrum ipsum dolor vestibulum elementum adipiscing placerat lectus pulvinar facilisis sapien curabitur turpis',\n    email: 'GSkublics@ante.org',\n    firstName: 'Ayse',\n    id: 448,\n    lastName: 'Ferguson',\n    phone: '(676)920-4776',\n  },\n];\n\nexport default localData32;\n","import localData32 from './localData/localData32';\n\nasync function getData(link:string ) {\n  try {\n    const response = await fetch(link);\n    const responseData = await response.json();\n    return responseData;\n  } catch {\n    return localData32;\n  }\n}\n\nexport default getData;\n","import { usersType, valuesType } from \"./types\";\n\nexport const getSortData = (sortColumn: string, data: Array<usersType>, direction: string) => {\n  const sortData = data.sort((a: any, b: any) => {\n    if (direction === 'up') {\n      if (a[sortColumn] < b[sortColumn]) {\n        return -1;\n      }\n      if (a[sortColumn] > b[sortColumn]) {\n        return 1;\n      }\n    }\n    if (direction === 'down') {\n      if (a[sortColumn] < b[sortColumn]) {\n        return 1;\n      }\n      if (a[sortColumn] > b[sortColumn]) {\n        return -1;\n      }\n    }\n    return 0;\n  });\n  return sortData;\n};\n\nexport const changeArrow = (direction: string) => {\n  if (direction === 'up') {\n    return 'down';\n  }\n  return 'up';\n};\n\nexport const getPogination = (users: Array<usersType>) => {\n  const items = users.length;\n  const totalCount = Math.ceil(items / 50);\n  const pages = [];\n  for (let i = 1; i <= totalCount; i += 1) {\n    pages.push(i);\n  }\n  return pages;\n};\n\nexport const getUsersPortion = (users: Array<usersType>, pageNumber: number) => {\n  const lefBorder = (pageNumber - 1) * 50;\n  const rightBorder = pageNumber * 50 - 1;\n  const currentPortion = users.filter((item, index) => index >= lefBorder && index <= rightBorder);\n  return currentPortion;\n};\n\nexport const serchItem = (values: valuesType, allUsersCopy: Array<usersType>) => {\n  const str = values.sortString.toLowerCase();\n  if (!values.sortString) {\n    return allUsersCopy;\n  }\n  if (!values.column) {\n    return allUsersCopy.filter((item) => item\n      .firstName.toLowerCase().includes(str.toLowerCase())\n      || item.lastName.toLowerCase().includes(str.toLowerCase())\n      || item.email.toLowerCase().includes(str.toLowerCase()));\n  }\n\n  const sortColumn = values.column;\n  return allUsersCopy.filter((item) => (item[sortColumn]).toLowerCase().includes(str));\n};\n","import getData from './api/dataApi';\nimport {\n  getSortData, changeArrow, getPogination, getUsersPortion, serchItem,\n} from './functions';\nimport { InferActionsTypes, BaseThunkType } from './reduxStore';\nimport { uiType, usersType, valuesType } from './types';\n\nconst initialState = {\n  link: '' as string ,\n  allUsers: [] as Array<usersType> ,\n  allUsersCopy: [] as Array<usersType>,\n  users: [\n    {\n      address: {\n        streetAddress: '', city: '', state: '', zip: '',\n      },\n      description: '',\n      email: '',\n      firstName: '',\n      id: null as number | null,\n      lastName: '',\n      phone: '',\n    },\n  ] as Array<usersType>,\n  userInfo: null as usersType | null,\n  ui: {\n    column: 'id',\n    direction: 'up',\n    paginationList: [],\n    pageNumber: 1,\n    searchString: '',\n    isAddUser: false,\n    progress: false,\n    icon_error: false,\n  } as uiType,\n};\n\nconst dataReducer = (state = initialState, action: actionsTypes): initialStateType => {\n  switch (action.type) {\n    case 'ADD_DATA': {\n      return {\n        ...state,\n        allUsers: [...action.allUsers],\n      };\n    }\n    case 'ADD_DATA_COPY': {\n      return {\n        ...state,\n        allUsersCopy: [...action.data],\n      };\n    }\n    case 'ADD_SORT_USERS': {\n      return {\n        ...state,\n        users: [...action.users],\n\n      };\n    }\n    case 'ADD_PERSON': {\n      return {\n        ...state,\n        users: [action.payload, ...state.users],\n        allUsers: [action.payload, ...state.allUsers],\n        allUsersCopy: [action.payload, ...state.allUsersCopy],\n      };\n    }\n    case 'ADD_PERSON_INFO': {\n      return {\n        ...state,\n        userInfo: action.payload,\n      };\n    }\n    case 'SET_COLUNM': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          column: action.column,\n        },\n      };\n    }\n    case 'SET_DIRECTIONS': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          direction: action.directions,\n        },\n      };\n    }\n    case 'SET_PAGINATION_ARRAY': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          paginationList: [...action.array],\n        },\n      };\n    }\n    case 'SET_PAGE_NUMBER': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          pageNumber: action.number,\n        },\n      };\n    }\n    case 'SET_SERCH_STRING': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          searchString: action.searchString,\n        },\n      };\n    }\n    case 'SET_ADD_USER_FLAG': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          isAddUser: action.payload,\n        },\n      };\n    }\n    case 'SET_LINK': {\n      return {\n        ...state,\n        link: action.link,\n      };\n    }\n    case 'SET_PROGRESS': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          progress: action.progress,\n        },\n        \n      };\n    }\n    case 'SET_ICON_ERROR': {\n      return {\n        ...state,\n        ui: {\n          ...state.ui,\n          icon_error: action.payload,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  addNewData: (allUsers: Array<usersType>) => ({ type: 'ADD_DATA', allUsers } as const)  ,\n  addDataCopy: (data: Array<usersType>) => ({ type: 'ADD_DATA_COPY', data } as const),\n  addSortUsers: (users: Array<usersType>) => ({ type: 'ADD_SORT_USERS', users } as const),\n  setColumn: (column:string) => ({ type: 'SET_COLUNM', column } as const),\n  setDirections: (directions:string) => ({ type: 'SET_DIRECTIONS', directions } as const),\n  setPaginationArray: (array: Array<number>) => ({ type: 'SET_PAGINATION_ARRAY', array } as const),\n  setPageNumber: (number: number) => ({ type: 'SET_PAGE_NUMBER', number } as const),\n  setSearchString: (searchString: string) => ({ type: 'SET_SERCH_STRING', searchString } as const),\n  setIsAddUsers: (payload: boolean) => ({ type: 'SET_ADD_USER_FLAG', payload } as const),\n  addPerson: (payload:usersType) => ({ type: 'ADD_PERSON', payload } as const),\n  addPersonInfo: (payload:usersType |null) => ({ type: 'ADD_PERSON_INFO', payload } as const),\n  setLink: (link:string ) => ({ type: 'SET_LINK', link } as const),\n  setProgress: (progress: boolean) => ({ type: 'SET_PROGRESS', progress } as const),\n  setIconError: (payload: boolean) => ({ type: 'SET_ICON_ERROR', payload } as const),\n};\n\nexport const getSortDataTc = (column: string, users:Array<usersType>, directions: string, pageNumber: number): thuncTypes =>{ \n  return async (dispatch) => {\n  dispatch(actions.setColumn(column));\n  dispatch(actions.setDirections(changeArrow(directions)));\n  const sortData = getSortData(column, users, directions);\n  dispatch(actions.addSortUsers(getUsersPortion(sortData, pageNumber)));\n  dispatch(actions.setPaginationArray(getPogination(sortData)));\n  dispatch(actions.addNewData(sortData));\n  dispatch(actions.setPageNumber(pageNumber));\n}};\n\nexport const getDataTc = (link:string):thuncTypes => {\n  return async (dispatch) => {\n  dispatch(actions.setProgress(true));\n  getData(link)\n    .then((data) => {\n      dispatch(actions.addDataCopy(data));\n      dispatch(getSortDataTc('id', data, 'up', 1));\n      dispatch(actions.setProgress(false));\n    });\n}};\n\nexport const setSerchUsersTc = (values:valuesType, allUsersCopy:Array<usersType>): thuncTypes =>{ \n  return async (dispatch) => {\n  const users = serchItem(values, allUsersCopy);\n  dispatch(getSortDataTc('id', users, 'up', 1));\n  dispatch(actions.setSearchString(values.sortString));\n  if (users.length < 1) {\n    dispatch(actions.setIconError(true));\n  } else {\n    dispatch(actions.setIconError(false));\n  }\n}};\n\nexport const addPersonTc = (person:usersType): thuncTypes =>{ \n  return async (dispatch) => {\n  dispatch(actions.addPerson(person));\n};}\n\nexport default dataReducer;\n\ntype initialStateType = typeof initialState\ntype actionsTypes = InferActionsTypes<typeof actions>\ntype thuncTypes = BaseThunkType<actionsTypes>\n","import React from 'react';\nimport iconError from './icon/nothing-found (1).png';\nimport s from './error.module.css';\n\nconst Error = () => (\n  <div>\n    <div className={s.error_icon_block}><img alt=\"\" src={iconError} className={s.error_icon} /></div>\n    <div className={s.error_text}>Нет данных удовлетворяющих условиям поиска</div>\n\n  </div>\n);\n\nexport default Error;\n","import React from 'react';\nimport s from './loading.module.css';\n\nconst Loader = () => (<div className={s.loader}>Loading...</div>);\n\nexport default Loader;\n","import React from 'react';\nimport { usersType } from '../../../../types';\nimport s from './adress.module.css';\n\n\ntype propsType = {\n  person: usersType\n  showPerson: (arg: null | usersType ) => void\n}\n\nconst Adress: React.FC<propsType> = (props) => {\n  const { person, showPerson } = props;\n  const {\n    firstName, address, description, lastName,\n  } = person;\n  return (\n    <div>\n      <span>\n        Выбран пользователь:\n        <span className={s.desc}>\n          {' '}\n          {firstName}\n          {' '}\n          {lastName}\n        </span>\n      </span>\n      <div className={s.textarea}>\n        Описание:\n        <textarea className={s.data_textarea} onChange={() => { }} value={description} />\n      </div>\n      <div>\n        Адрес проживания:\n        <span className={s.desc}>{address.streetAddress}</span>\n      </div>\n      <div>\n        Город:\n        <span className={s.desc}>{address.city}</span>\n      </div>\n      <div>\n        Провинция/штат:\n        <span className={s.desc}>{address.state}</span>\n      </div>\n      <div className={s.button}>\n        <div>\n          Индекс:\n          <span className={s.desc}>{address.zip}</span>\n        </div>\n\n        <button type=\"button\" onClick={() => { showPerson(null); }} className={s.big}>Закрыть</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Adress;\n","import React from 'react';\nimport s from './buttons.module.css';\n\ntype propsType ={\n  setLink: (link: string) => void\n}\n\nconst Buttons: React.FC<propsType> = (props) => {\n  const { setLink } = props;\n  const little = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\n  const big = 'http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\n  return (\n    <div className={s.buttons}>\n      <button type=\"button\" className={s.little} onClick={() => { setLink(little); }}> 32 </button>\n      <button type=\"button\" className={s.big} onClick={() => { setLink(big); }}> 1000 </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\nimport {\n  Formik, Field, Form,\n} from 'formik';\nimport * as yup from 'yup';\nimport MaskedInput from 'react-text-mask';\nimport s from './add_form.module.css';\n\nconst phoneNumberMask = [\n  '(',\n  /[1-9]/,\n  /\\d/,\n  /\\d/,\n  ')',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\n\n// type propsType = {\n//   isAddUser: boolean\n//   showForm:(button :string, e:any, flag: boolean) => void\n//   addPerson: (values:{  id: string, firstName: string, lastName: string, email: string, phone: string }) => void\n// }\n\n\nconst AddUserForm = (props) => {\n  const { isAddUser, showForm, addPerson } = props;\n\n  const validationSchema = yup.object().shape({\n    id: yup.number().typeError('Должно быть числом').required('Поле обязательно'),\n    firstName: yup.string().typeError('Должно быть строкой').required('Поле обязательно'),\n    lastName: yup.string().typeError('Должно быть строкой').required('Поле обязательно'),\n    email: yup.string().email('Введите валидный email').required('Поле обязательно'),\n    phone: yup.string().min(13, 'Введите полный номер').required('Поле обязательно'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        id: '', firstName: '', lastName: '', email: '', phone: '',\n      }}\n      onSubmit={(values) => {\n        addPerson(values);\n      }}\n      validationSchema={validationSchema}\n      validateOnBlur\n    >\n      {({\n        values, errors, touched, handleChange, handleBlur, isValid, dirty,\n      }) => (\n        <Form className={s.form_container}>\n          {isAddUser\n            ? (\n              <div className={s.search_container}>\n                <div className={s.input_container}>\n                  <label htmlFor=\"id\">\n                    <Field\n                      placeholder=\"enter id\"\n                      className={s.form_input}\n                      name=\"id\"\n                      type=\"text\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.id}\n                    />\n                    {touched.id && errors.id && <div className={s.error}>{errors.id}</div>}\n                  </label>\n                </div>\n\n                <div className={s.input_container}>\n                  <label htmlFor=\"firstName\">\n                    <Field\n                      placeholder=\"enter firstName\"\n                      className={s.form_input}\n                      name=\"firstName\"\n                      type=\"text\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.firstName}\n                    />\n                    {touched.firstName && errors.firstName\n                      && <div className={s.error}>{errors.firstName}</div>}\n                  </label>\n                </div>\n\n                <div className={s.input_container}>\n                  <label htmlFor=\"lastName\">\n                    <Field\n                      placeholder=\"enter lastName\"\n                      className={s.form_input}\n                      name=\"lastName\"\n                      type=\"text\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.lastName}\n                    />\n                    {touched.lastName && errors.lastName\n                      && <div className={s.error}>{errors.lastName}</div>}\n                  </label>\n                </div>\n\n                <div className={s.input_container}>\n                  <label htmlFor=\"email\">\n                    <Field\n                      placeholder=\"enter email\"\n                      className={s.form_input}\n                      name=\"email\"\n                      type=\"text\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      value={values.email}\n                    />\n                    {touched.email && errors.email && <div className={s.error}>{errors.email}</div>}\n                  </label>\n                </div>\n\n                <div\n                  className={s.input_container}>\n                  <label htmlFor=\"phone\">\n                    <Field\n                      name=\"phone\"\n                      value={values.phone}\n                      onBlur={handleBlur}\n                    >\n\n                      {({ field }) => (\n                        <MaskedInput\n                          {...field}\n                          mask={phoneNumberMask}\n                          placeholder=\"enter phone\"\n                          id=\"phone\"\n                          type=\"text\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={\n                            errors.phone && touched.phone\n                              ? s.form_input_error\n                              : s.form_input\n                          }\n                          guide={false}\n                        />\n                      )}\n                    </Field>\n                    {errors.phone && touched.phone && (\n                      <div className={s.error}>{errors.phone}</div>\n                    )}\n                  </label>\n                </div>\n\n                {values.id && values.firstName && values.lastName\n                  && values.email && values.phone !== ''\n                  ? <button disabled={!isValid || !dirty} className={s.button_add} type=\"submit\">Добавить</button> : <button onClick={(e) => { showForm('close', e, false); }} className={s.button_close} type=\"submit\"> Закрыть </button>}\n              </div>\n            )\n            : <button onClick={(e) => { showForm('add', e, true); }} className={s.button_add} type=\"button\">Добавить</button>}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddUserForm;\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport s from './search_form.module.css';\nimport { valuesType } from '../../../../../types';\n\n\n\n\ntype propsType = {\n  setSerchUsers: (values: valuesType) => void\n}\n\nconst SearchForm: React.FC<propsType> = (props) => (\n\n  <Formik\n  initialValues={{ sortString: '', column: '' }}\n  onSubmit={(values: valuesType) => {\n    props.setSerchUsers(values);\n  }}\n>\n  <Form>\n    <div className={s.search_container}>\n      <Field className={s.search_input} name=\"sortString\" type=\"text\" />\n      <Field className={s.select_list} name=\"column\" as=\"select\">\n        <option value=\"\">All</option>\n        <option value=\"firstName\">Only name</option>\n        <option value=\"lastName\">Only last name</option>\n        <option value=\"email\">Only email</option>\n      </Field>\n      <button className={s.button_submit} type=\"submit\">Найти</button>\n      <button className={s.button_reset} onClick={() => { props.setSerchUsers({ sortString: '', column: '' }); }} type=\"button\"> Сбросить </button>\n    </div>\n  </Form>\n\n</Formik>\n\n\n);\n\nexport default SearchForm;\n","import React from 'react';\nimport { usersType, valuesType } from '../../../types';\nimport Error from '../../error/error';\nimport Loader from '../../Loading/loading';\nimport Adress from './adress/adress';\nimport Buttons from './buttons/button';\nimport AddUserForm from './forms/addUserForm/AddUserForm';\nimport SearchForm from './forms/search/Search-form';\nimport s from './table.module.css';\n\ntype propsType = {\n  users: Array<usersType>\n  paginationList: Array<number>\n  column: string\n  direction: string\n  pageNumber: number\n  isAddUser: boolean\n  person: usersType | null\n  link: string\n  progress: boolean\n  iconError: boolean\n  handleClick: (column: string) => void\n  chengePage: (pageNumber: number) => void\n  setSerchUsers: (values: valuesType) => void\n  showForm: (button: string, e: any, flag: boolean) => void\n  addPerson: (person: usersType) => void\n  showPerson: (person: usersType | null) => void\n  setLink: (link: string) => void\n}\n\n\nconst Table: React.FC<propsType> = (props) => {\n  const {\n    users,\n\n    column,\n    direction,\n    paginationList,\n    progress,\n    iconError,\n    person,\n    link,\n    pageNumber,\n    isAddUser,\n    setSerchUsers,\n    showForm,\n    addPerson,\n    showPerson,\n    chengePage,\n    setLink,\n    handleClick,\n\n  } = props;\n\n  return (\n    <div className={s.container}>\n\n      {!link\n        ? <Buttons setLink={setLink} />\n        : (\n          <div className={s.table_container}>\n            <div>\n              <SearchForm setSerchUsers={setSerchUsers} />\n              <AddUserForm isAddUser={isAddUser} showForm={showForm} addPerson={addPerson} />\n              {iconError ? <Error />\n                : (\n                  <div>\n                    <div className={s.table_title}>\n                      <div\n                        aria-hidden=\"true\"\n                        role=\"button\"\n                        tabIndex={0}\n                        onClick={() => handleClick('id')}\n                        className={s.id}\n                      >\n                        id\n                        {column === 'id' ? <span><i className={s[direction]} /></span> : null}\n                      </div>\n                      <div\n                        aria-hidden=\"true\"\n                        role=\"button\"\n                        tabIndex={0}\n                        onClick={() => handleClick('firstName')}\n                        className={s.firstName}\n                      >\n                        firstName\n                        {column === 'firstName' ? <span><i className={s[direction]} /></span> : null}\n                      </div>\n                      <div\n                        aria-hidden=\"true\"\n                        role=\"button\"\n                        tabIndex={0}\n                        onClick={() => handleClick('lastName')}\n                        className={s.lastName}\n                      >\n                        lastName\n                        {column === 'lastName' ? <span><i className={s[direction]} /></span> : null}\n                      </div>\n                      <div\n                        aria-hidden=\"true\"\n                        role=\"button\"\n                        tabIndex={0}\n                        onClick={() => handleClick('email')}\n                        className={s.email}\n                      >\n                        email\n                        {column === 'email' ? <span><i className={s[direction]} /></span> : null}\n                      </div>\n                      <div\n                        aria-hidden=\"true\"\n                        role=\"button\"\n                        tabIndex={0}\n                        onClick={() => handleClick('phone')}\n                        className={s.phone}\n                      >\n                        phone\n                        {column === 'phone' ? <span><i className={s[direction]} /></span> : null}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              {progress\n                ? <Loader />\n                : (\n                  <div>\n                    {users.map((user) => (\n                      <div\n                        aria-hidden=\"true\"\n                        role=\"button\"\n                        tabIndex={0}\n                        onClick={() => { showPerson(user); }}\n                        key={user.id + user.phone}\n                        className={s.table}\n                      >\n                        <div className={s.id}>{user.id}</div>\n                        <div className={s.firstName}>{user.firstName}</div>\n                        <div className={s.lastName}>{user.lastName}</div>\n                        <div className={s.email}>{user.email}</div>\n                        <div className={s.phone}>{user.phone}</div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n            </div>\n\n            {person != null ? <Adress person={person} showPerson={showPerson} /> : null}\n            <div className={s.pagination__block}>\n              {paginationList.map((item) => (\n                <button\n                  type=\"button\"\n                  key={item}\n                  onClick={() => chengePage(item)}\n                  className={pageNumber === item ? s.selectedPage : s.selected__no_active}\n                >\n                  {item}\n                </button>\n              ))}\n            </div>\n\n          </div>\n        )}\n\n    </div>\n\n  );\n};\n\nexport default Table;\n","import { appStateType } from \"./reduxStore\";\n\nexport const getPageNumber = (state: appStateType) => state.dataReducer.ui.pageNumber;\nexport const getUsers = (state: appStateType) => state.dataReducer.users;\nexport const getAllUsers = (state: appStateType) => state.dataReducer.allUsers;\nexport const getDirection = (state: appStateType) => state.dataReducer.ui.direction;\nexport const getColumn = (state: appStateType) => state.dataReducer.ui.column;\nexport const getPaginationList = (state: appStateType) => state.dataReducer.ui.paginationList;\nexport const getallUsersCopy = (state: appStateType) => state.dataReducer.allUsersCopy;\nexport const getSearchString = (state: appStateType) => state.dataReducer.ui.searchString;\nexport const getIsAddUser = (state: appStateType) => state.dataReducer.ui.isAddUser;\nexport const getPersonAdress = (state: appStateType) => state.dataReducer.userInfo;\nexport const getLink = (state: appStateType) => state.dataReducer.link;\nexport const getProgress = (state: appStateType) => state.dataReducer.ui.progress;\nexport const getIconStatus = (state: appStateType) => state.dataReducer.ui.icon_error;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getDataTc, getSortDataTc, setSerchUsersTc, actions, addPersonTc,\n} from '../../dataReducer';\nimport Table from './table/table';\nimport {\n  getPageNumber,\n  getUsers,\n  getAllUsers,\n  getDirection,\n  getColumn,\n  getPaginationList,\n  getallUsersCopy,\n  getIsAddUser,\n  getPersonAdress,\n  getLink,\n  getProgress,\n  getIconStatus,\n} from '../../selectors';\nimport { usersType, valuesType } from '../../types';\n\nconst AllDataContainer: React.FC = () => {\n  const dispatch = useDispatch();\n  const pageNumber = useSelector(getPageNumber);\n  const users = useSelector(getUsers);\n  const allUsers = useSelector(getAllUsers);\n  const direction = useSelector(getDirection);\n  const column = useSelector(getColumn);\n  const paginationList = useSelector(getPaginationList);\n  const allUsersCopy = useSelector(getallUsersCopy);\n  const isAddUser = useSelector(getIsAddUser);\n  const person = useSelector(getPersonAdress);\n  const link = useSelector(getLink);\n  const progress = useSelector(getProgress);\n  const iconError = useSelector(getIconStatus);\n\n  useEffect(() => {\n    dispatch(getDataTc(link));\n  }, [ dispatch,link]);\n\n  const prevColumn = column;\n  const handleClick = (propsColumn :string) => {\n    if (propsColumn === prevColumn) {\n      dispatch(getSortDataTc(propsColumn, allUsers, direction, pageNumber));\n    } else {\n      dispatch(getSortDataTc(propsColumn, allUsers, 'up', pageNumber));\n    }\n  };\n\n  const chengePage = (propsPageNumber :number) => {\n    if (column === prevColumn) {\n      dispatch(getSortDataTc(column, allUsers, 'up', propsPageNumber));\n    } else {\n      dispatch(getSortDataTc(column, allUsers, direction, propsPageNumber));\n    }\n  };\n\n  const setSerchUsers = (values: valuesType) => dispatch(setSerchUsersTc(values, allUsersCopy));\n  const addPerson = (propsPerson: usersType) => dispatch(addPersonTc(propsPerson));\n\n  const showForm = (button :string, e:any, flag: boolean) => {\n    if (button === 'add') {\n      e.currentTarget.parentElement.style.width = '100%';\n    } if (button === 'close') {\n      e.target.parentElement.parentElement.style.width = '0%';\n    }\n    dispatch(actions.setIsAddUsers(flag));\n  };\n\n  const showPerson = (propsPerson:usersType | null ) => {\n    dispatch(actions.addPersonInfo(propsPerson));\n  };\n\n  const setLink = (propsLink: string) => {\n    dispatch(actions.setLink(propsLink));\n  };\n\n  return (\n    <Table\n      pageNumber={pageNumber}\n      paginationList={paginationList}\n      users={users}\n      column={column}\n      direction={direction}\n      isAddUser={isAddUser}\n      person={person}\n      progress={progress}\n      iconError={iconError}\n      handleClick={handleClick}\n      chengePage={chengePage}\n      setSerchUsers={setSerchUsers}\n      showForm={showForm}\n      addPerson={addPerson}\n      showPerson={showPerson}\n      link={link}\n      setLink={setLink}\n    />\n  );\n};\n\nexport default AllDataContainer;\n","import React from 'react';\nimport Container from './components/container/Container';\n\nconst App = () => (\n  <div className=\"container\">\n    <Container />\n  </div>\n);\n\n\nexport default App;\n","import {\n  combineReducers, createStore, applyMiddleware, Action,\n} from 'redux';\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\nimport dataReducer from './dataReducer';\n\nconst reducers = combineReducers({\n  dataReducer,\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n// типизация для state\ntype reducersType = typeof reducers\nexport type appStateType = ReturnType<reducersType>\n\n// типизация для action creators\ntype propertiesTypes<T> = T extends { [key: string]: infer U } ? U : never;\nexport type InferActionsTypes<T extends {\n  [key: string]:\n  (...args: any[]) => any\n}> = ReturnType<propertiesTypes<T>>\n\n// типизация для thunc creators\nexport type BaseThunkType<A extends Action, R = Promise<void>> =\n  ThunkAction<R, appStateType, unknown, A>\n\n// @ts-ignore\nwindow.store = store;\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './reduxStore';\n\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_container\":\"search_form_search_container__3WqT3\",\"search_input\":\"search_form_search_input__3bmv7\",\"select_list\":\"search_form_select_list__3KD1D\",\"button_submit\":\"search_form_button_submit__2ttaS\",\"button_reset\":\"search_form_button_reset__1qs5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"table_container__3Tezq\",\"table_container\":\"table_table_container__3Ov_P\",\"table\":\"table_table__2ZuOa\",\"table_title\":\"table_table_title__3b9Kt\",\"id\":\"table_id__ZnG5U\",\"firstName\":\"table_firstName__26u75\",\"lastName\":\"table_lastName__2MSb5\",\"email\":\"table_email__16pzi\",\"phone\":\"table_phone__3i0Az\",\"down\":\"table_down__2r1sc\",\"up\":\"table_up__156Qj\",\"pagination__block\":\"table_pagination__block__10Ztn\",\"root\":\"table_root__3bUot\",\"selectedPage\":\"table_selectedPage__fQVtX\",\"selected__no_active\":\"table_selected__no_active__2BnHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_container\":\"add_form_search_container__2qYFS\",\"form_input\":\"add_form_form_input__2plDd\",\"select_list\":\"add_form_select_list__vyJ-q\",\"button_add\":\"add_form_button_add__2wsbL\",\"button_close\":\"add_form_button_close__2YlA9\",\"form_container\":\"add_form_form_container__2xW_o\",\"input_container\":\"add_form_input_container__17rT5\",\"error\":\"add_form_error__Wl6kt\",\"form_input_error\":\"add_form_form_input_error__wIc1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_icon\":\"error_error_icon__brkdm\",\"error_text\":\"error_error_text__U75Fl\",\"error_icon_block\":\"error_error_icon_block__3FMI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"buttons_buttons__1xSxd\",\"little\":\"buttons_little__3Jw8w\",\"big\":\"buttons_big__3u5ND\"};","module.exports = __webpack_public_path__ + \"static/media/nothing-found (1).27fbf4eb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loading_loader__Dw-20\",\"load6\":\"loading_load6__3VFZr\",\"round\":\"loading_round__KE5fC\"};"],"sourceRoot":""}